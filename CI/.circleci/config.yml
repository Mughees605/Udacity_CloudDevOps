# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
commands:
  print_pipeline_id:
    description: "A very simple command for demonstration purposes."
    steps:
      - run:
          name: "echo workflow id"
          command: |
            echo $CIRCLE_WORKFLOW_ID
# Orchestrate or schedule a set of jobs
jobs:
  # print_hello:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - checkout
  #     - run: echo "hello"
  # print_world:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - checkout
  #     - run: 
  #         name: "echo an env var that is part of our project"
  #         command: |
  #            echo ${MY_ENV_VAR}
  # save_hello_world_output:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - checkout 
  #     - run:
  #         name: "create output.txt file."
  #         command: |
  #           echo "Holaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" > output.txt
  #     - save_cache:
  #         key: output.txt
  #         paths:
  #           - ./output.txt
  # print_output_file:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - checkout
  #     - restore_cache:
  #         keys: 
  #           - output.txt
  #     - run:
  #         name: "output output.txt file."
  #         command: |
  #            cat output.txt
################################THIS IS THE SAME WORK AS ABOVE BUT USED WORKSPACE AS STORAGE.
#  save_hello_world_output:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - run: echo "hello world" > ~/output.txt
#       - persist_to_workspace:
#           root: ~/
#           paths:
#             - output.txt

#   print_output_file:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - attach_workspace:
#           at: ~/
#       - run: cat ~/output.txt
# print_command:
#   docker:
#     - image: circleci/node:13.8.0
#   steps:
#     - checkout
#     - print_pipeline_id

  print_command:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: return 1
      - run: 
          name: Upload Failed Tests
          command: echo "I fail"
          when: on_fail

workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - print_command
